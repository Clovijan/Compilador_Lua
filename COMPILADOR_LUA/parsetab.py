
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftGTLTGTEQUALSLTEQUALSEQUALSDIFleftCONCATleftPLUSMINUSleftPERCENTUALTIMESDIVIDEleftNOTTAGleftEXPOAND ATRIB BREAK COLON COMMA CONCAT DIF DIVIDE DO DOT DUALCOLON ELSE ELSEIF END EQUALS EXPO FALSE FOR FUNCTION GT GTEQUALS IF IN LBRACE LCOLCH LOCAL LPAREN LT LTEQUALS MINUS NAME NIL NOT NUMBER OR PERCENTUAL PLUS RBRACE RCOLCH REPEAT RETURN RPAREN SEMICOLON STRING TAG THEN TIMES TRUE UNTIL VAR VARARGS WHILEprogram : blockblock : command\n             | command block \n             command : SEMICOLON\n               | list_vars ATRIB list_exps\n               | call_function\n               | rotulo\n               | BREAK\n               | DO block END\n               | struct_while\n               | struct_repeat\n               | if\n               | struct_for\n               | struct_for_in\n               | def_function\n               | local_var\n               | command_retcommand_ret : RETURN\n                   | RETURN list_exps\n                   | RETURN list_exps SEMICOLONrotulo : DUALCOLON NAME DUALCOLONname_function : NAME\n                     | NAME DOT NAME\n                     | NAME COLON NAMElist_vars : var \n                 | var COMMA list_varsvar : NAME \n           | prefix_exp LCOLCH exp RCOLCH\n           | prefix_exp DOT NAME prefix_exp : var\n                   | call_function \n                   | LPAREN exp RPARENlist_names : NAME COMMA list_names\n                  | NAMElist_exps : exp COMMA list_exps\n                 | expexp : var\n           | NIL \n           | FALSE\n           | TRUE \n           | NUMBER\n           | STRING \n           | VARARGS \n           | def_function \n           | exp_prefix\n           | construct_table\n           | TAG exp\n           | MINUS exp\n           | NOT exp\n           | exp PLUS exp\n           | exp MINUS exp\n           | exp TIMES exp\n           | exp DIVIDE exp\n           | exp EXPO exp\n           | exp PERCENTUAL exp\n           | exp CONCAT exp\n           | exp LT exp\n           | exp LTEQUALS exp\n           | exp GT exp\n           | exp GTEQUALS exp\n           | exp EQUALS exp\n           | exp DIF exp\n           | exp AND exp\n           | exp OR expexp_prefix : var \n                  | LPAREN exp RPARENcall_function : exp_prefix args args : LPAREN list_exps RPAREN\n             | LPAREN RPAREN\n             | construct_tabledef_function : function \n                    | local_functionbody_function : LPAREN list_pars RPAREN block ENDlist_pars : list_names\n                 | list_names COMMA VARARGS\n                 | VARARGSconstruct_table : LBRACE list_fields RBRACE\n                       | LBRACE RBRACElist_fields : field \n                   | field separator_fields list_fields\n                   | field_empty\n                   | field_empty separator_fields list_fieldsfield_empty : LCOLCH exp RCOLCH\n                   | NAMEfield : LCOLCH exp RCOLCH ATRIB exp\n             | NAME ATRIB exp separator_fields : COMMA\n                        | SEMICOLONlocal_var : LOCAL list_names ATRIB list_exps\n                 | LOCAL list_names\n                 | LOCAL NAME ATRIB expfunction : FUNCTION name_function body_functionif : IF exp THEN block END\n          | IF exp THEN else\n          | IF exp THEN block else_if elseelse_if : ELSEIF exp THEN block\n               | ELSEIF exp THEN block else_ifelse : ELSE block ENDstruct_while : WHILE exp DO block ENDstruct_for : FOR NAME ATRIB exp COMMA exp DO block END\n                  | FOR NAME ATRIB exp COMMA exp COMMA exp DO block ENDstruct_for_in : FOR list_names IN list_exps DO block ENDstruct_repeat : REPEAT block UNTIL explocal_function : LOCAL FUNCTION NAME body_function'
    
_lr_action_items = {'SEMICOLON':([0,3,4,6,7,8,9,10,11,12,13,14,15,16,17,21,23,26,27,29,37,39,43,44,45,46,47,48,49,50,51,52,62,63,65,66,72,73,78,80,81,82,84,85,86,102,103,104,106,113,116,117,118,123,124,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,150,152,153,155,156,157,158,159,168,169,170,171,176,177,180,182,187,188,190,191,192,197,198,200,],[4,4,-4,-6,-7,-8,4,-10,-11,-12,-13,-14,-15,-16,-17,-27,4,-71,-72,-18,-67,-70,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-90,-34,113,-36,-5,-9,-69,-78,127,127,-84,-21,4,-47,-48,-49,4,-20,-29,-66,-92,-68,-77,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-103,-94,4,-34,-33,-89,-91,-104,-35,-28,-83,-86,-99,-93,4,4,-95,-98,-85,4,4,-102,-73,4,-100,-101,]),'BREAK':([0,3,4,6,7,8,9,10,11,12,13,14,15,16,17,21,23,26,27,29,37,39,43,44,45,46,47,48,49,50,51,52,62,63,65,66,72,73,78,80,85,86,102,103,104,106,113,116,117,118,123,124,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,150,152,153,155,156,157,158,159,170,171,176,177,180,182,188,190,191,192,197,198,200,],[8,8,-4,-6,-7,-8,8,-10,-11,-12,-13,-14,-15,-16,-17,-27,8,-71,-72,-18,-67,-70,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-90,-34,-19,-36,-5,-9,-69,-78,-21,8,-47,-48,-49,8,-20,-29,-66,-92,-68,-77,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-103,-94,8,-34,-33,-89,-91,-104,-35,-28,-99,-93,8,8,-95,-98,8,8,-102,-73,8,-100,-101,]),'DO':([0,3,4,6,7,8,9,10,11,12,13,14,15,16,17,21,23,26,27,29,37,39,42,43,44,45,46,47,48,49,50,51,52,62,63,65,66,72,73,78,80,85,86,102,103,104,106,113,116,117,118,123,124,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,150,152,153,154,155,156,157,158,159,170,171,176,177,180,182,183,188,190,191,192,194,197,198,200,],[9,9,-4,-6,-7,-8,9,-10,-11,-12,-13,-14,-15,-16,-17,-27,9,-71,-72,-18,-67,-70,86,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-90,-34,-19,-36,-5,-9,-69,-78,-21,9,-47,-48,-49,9,-20,-29,-66,-92,-68,-77,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-103,-94,9,-34,-33,176,-89,-91,-104,-35,-28,-99,-93,9,9,-95,-98,190,9,9,-102,-73,197,9,-100,-101,]),'DUALCOLON':([0,3,4,6,7,8,9,10,11,12,13,14,15,16,17,21,23,26,27,29,37,39,41,43,44,45,46,47,48,49,50,51,52,62,63,65,66,72,73,78,80,85,86,102,103,104,106,113,116,117,118,123,124,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,150,152,153,155,156,157,158,159,170,171,176,177,180,182,188,190,191,192,197,198,200,],[20,20,-4,-6,-7,-8,20,-10,-11,-12,-13,-14,-15,-16,-17,-27,20,-71,-72,-18,-67,-70,85,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-90,-34,-19,-36,-5,-9,-69,-78,-21,20,-47,-48,-49,20,-20,-29,-66,-92,-68,-77,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-103,-94,20,-34,-33,-89,-91,-104,-35,-28,-99,-93,20,20,-95,-98,20,20,-102,-73,20,-100,-101,]),'WHILE':([0,3,4,6,7,8,9,10,11,12,13,14,15,16,17,21,23,26,27,29,37,39,43,44,45,46,47,48,49,50,51,52,62,63,65,66,72,73,78,80,85,86,102,103,104,106,113,116,117,118,123,124,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,150,152,153,155,156,157,158,159,170,171,176,177,180,182,188,190,191,192,197,198,200,],[22,22,-4,-6,-7,-8,22,-10,-11,-12,-13,-14,-15,-16,-17,-27,22,-71,-72,-18,-67,-70,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-90,-34,-19,-36,-5,-9,-69,-78,-21,22,-47,-48,-49,22,-20,-29,-66,-92,-68,-77,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-103,-94,22,-34,-33,-89,-91,-104,-35,-28,-99,-93,22,22,-95,-98,22,22,-102,-73,22,-100,-101,]),'REPEAT':([0,3,4,6,7,8,9,10,11,12,13,14,15,16,17,21,23,26,27,29,37,39,43,44,45,46,47,48,49,50,51,52,62,63,65,66,72,73,78,80,85,86,102,103,104,106,113,116,117,118,123,124,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,150,152,153,155,156,157,158,159,170,171,176,177,180,182,188,190,191,192,197,198,200,],[23,23,-4,-6,-7,-8,23,-10,-11,-12,-13,-14,-15,-16,-17,-27,23,-71,-72,-18,-67,-70,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-90,-34,-19,-36,-5,-9,-69,-78,-21,23,-47,-48,-49,23,-20,-29,-66,-92,-68,-77,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-103,-94,23,-34,-33,-89,-91,-104,-35,-28,-99,-93,23,23,-95,-98,23,23,-102,-73,23,-100,-101,]),'IF':([0,3,4,6,7,8,9,10,11,12,13,14,15,16,17,21,23,26,27,29,37,39,43,44,45,46,47,48,49,50,51,52,62,63,65,66,72,73,78,80,85,86,102,103,104,106,113,116,117,118,123,124,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,150,152,153,155,156,157,158,159,170,171,176,177,180,182,188,190,191,192,197,198,200,],[24,24,-4,-6,-7,-8,24,-10,-11,-12,-13,-14,-15,-16,-17,-27,24,-71,-72,-18,-67,-70,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-90,-34,-19,-36,-5,-9,-69,-78,-21,24,-47,-48,-49,24,-20,-29,-66,-92,-68,-77,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-103,-94,24,-34,-33,-89,-91,-104,-35,-28,-99,-93,24,24,-95,-98,24,24,-102,-73,24,-100,-101,]),'FOR':([0,3,4,6,7,8,9,10,11,12,13,14,15,16,17,21,23,26,27,29,37,39,43,44,45,46,47,48,49,50,51,52,62,63,65,66,72,73,78,80,85,86,102,103,104,106,113,116,117,118,123,124,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,150,152,153,155,156,157,158,159,170,171,176,177,180,182,188,190,191,192,197,198,200,],[25,25,-4,-6,-7,-8,25,-10,-11,-12,-13,-14,-15,-16,-17,-27,25,-71,-72,-18,-67,-70,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-90,-34,-19,-36,-5,-9,-69,-78,-21,25,-47,-48,-49,25,-20,-29,-66,-92,-68,-77,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-103,-94,25,-34,-33,-89,-91,-104,-35,-28,-99,-93,25,25,-95,-98,25,25,-102,-73,25,-100,-101,]),'LOCAL':([0,3,4,6,7,8,9,10,11,12,13,14,15,16,17,21,22,23,24,26,27,29,31,34,37,38,39,43,44,45,46,47,48,49,50,51,52,53,54,55,62,63,65,66,67,72,73,76,78,80,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,110,111,113,114,116,117,118,123,124,130,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,150,152,153,155,156,157,158,159,170,171,173,175,176,177,179,180,182,188,189,190,191,192,197,198,200,],[28,28,-4,-6,-7,-8,28,-10,-11,-12,-13,-14,-15,-16,-17,-27,57,28,57,-71,-72,57,57,57,-67,57,-70,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,57,57,57,-90,-34,-19,-36,57,-5,-9,57,-69,-78,57,-21,28,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,-47,-48,-49,57,28,57,57,57,57,-20,57,-29,-66,-92,-68,-77,57,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-103,-94,28,-34,-33,-89,-91,-104,-35,-28,-99,-93,57,57,28,28,57,-95,-98,28,57,28,-102,-73,28,-100,-101,]),'RETURN':([0,3,4,6,7,8,9,10,11,12,13,14,15,16,17,21,23,26,27,29,37,39,43,44,45,46,47,48,49,50,51,52,62,63,65,66,72,73,78,80,85,86,102,103,104,106,113,116,117,118,123,124,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,150,152,153,155,156,157,158,159,170,171,176,177,180,182,188,190,191,192,197,198,200,],[29,29,-4,-6,-7,-8,29,-10,-11,-12,-13,-14,-15,-16,-17,-27,29,-71,-72,-18,-67,-70,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-90,-34,-19,-36,-5,-9,-69,-78,-21,29,-47,-48,-49,29,-20,-29,-66,-92,-68,-77,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-103,-94,29,-34,-33,-89,-91,-104,-35,-28,-99,-93,29,29,-95,-98,29,29,-102,-73,29,-100,-101,]),'NAME':([0,3,4,6,7,8,9,10,11,12,13,14,15,16,17,20,21,22,23,24,25,26,27,28,29,31,32,34,36,37,38,39,40,43,44,45,46,47,48,49,50,51,52,53,54,55,62,63,64,65,66,67,68,72,73,76,78,80,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,116,117,118,119,120,121,123,124,125,126,127,128,130,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,150,152,153,155,156,157,158,159,170,171,173,175,176,177,179,180,182,188,189,190,191,192,197,198,200,],[21,21,-4,-6,-7,-8,21,-10,-11,-12,-13,-14,-15,-16,-17,41,-27,21,21,21,60,-71,-72,63,21,21,71,21,21,-67,21,-70,84,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,21,21,21,-90,-34,112,-19,-36,21,116,-5,-9,21,-69,-78,21,-21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,-47,-48,-49,21,21,21,152,21,21,21,-20,21,-29,-66,-92,152,163,164,-68,-77,84,-87,-88,84,21,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-103,-94,21,-34,-33,-89,-91,-104,-35,-28,-99,-93,21,21,21,21,21,-95,-98,21,21,21,-102,-73,21,-100,-101,]),'LPAREN':([0,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,26,27,29,31,34,36,37,38,39,43,44,45,46,47,48,49,50,51,52,53,54,55,62,63,65,66,67,70,71,72,73,74,76,78,80,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,110,111,112,113,114,116,117,118,123,124,130,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,150,152,153,155,156,157,158,159,163,164,165,170,171,173,175,176,177,179,180,182,188,189,190,191,192,197,198,200,],[31,31,-4,-6,-7,-8,31,-10,-11,-12,-13,-14,-15,-16,-17,-65,38,-27,31,31,31,-71,-72,31,31,31,76,-67,31,-70,-37,-38,-39,-40,-41,-42,-43,-44,38,-46,31,31,31,-90,-34,-19,-36,31,119,-22,-5,-9,-65,31,-69,-78,31,-21,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,-47,-48,-49,31,31,31,31,31,31,119,-20,31,-29,-66,-92,-68,-77,31,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-103,-94,31,-34,-33,-89,-91,-104,-35,-28,-23,-24,-66,-99,-93,31,31,31,31,31,-95,-98,31,31,31,-102,-73,31,-100,-101,]),'FUNCTION':([0,3,4,6,7,8,9,10,11,12,13,14,15,16,17,21,22,23,24,26,27,28,29,31,34,37,38,39,43,44,45,46,47,48,49,50,51,52,53,54,55,57,62,63,65,66,67,72,73,76,78,80,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,110,111,113,114,116,117,118,123,124,130,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,150,152,153,155,156,157,158,159,170,171,173,175,176,177,179,180,182,188,189,190,191,192,197,198,200,],[32,32,-4,-6,-7,-8,32,-10,-11,-12,-13,-14,-15,-16,-17,-27,32,32,32,-71,-72,64,32,32,32,-67,32,-70,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,32,32,32,64,-90,-34,-19,-36,32,-5,-9,32,-69,-78,32,-21,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-47,-48,-49,32,32,32,32,32,32,-20,32,-29,-66,-92,-68,-77,32,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-103,-94,32,-34,-33,-89,-91,-104,-35,-28,-99,-93,32,32,32,32,32,-95,-98,32,32,32,-102,-73,32,-100,-101,]),'$end':([1,2,3,4,6,7,8,10,11,12,13,14,15,16,17,21,26,27,29,33,37,39,43,44,45,46,47,48,49,50,51,52,62,63,65,66,72,73,78,80,85,102,103,104,113,116,117,118,123,124,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,152,153,155,156,157,158,159,170,171,180,182,191,192,198,200,],[0,-1,-2,-4,-6,-7,-8,-10,-11,-12,-13,-14,-15,-16,-17,-27,-71,-72,-18,-3,-67,-70,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-90,-34,-19,-36,-5,-9,-69,-78,-21,-47,-48,-49,-20,-29,-66,-92,-68,-77,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-103,-94,-34,-33,-89,-91,-104,-35,-28,-99,-93,-95,-98,-102,-73,-100,-101,]),'END':([3,4,6,7,8,10,11,12,13,14,15,16,17,21,26,27,29,33,35,37,39,43,44,45,46,47,48,49,50,51,52,62,63,65,66,72,73,78,80,85,102,103,104,113,116,117,118,123,124,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,152,153,155,156,157,158,159,170,171,174,180,182,184,185,191,192,195,198,199,200,],[-2,-4,-6,-7,-8,-10,-11,-12,-13,-14,-15,-16,-17,-27,-71,-72,-18,-3,73,-67,-70,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-90,-34,-19,-36,-5,-9,-69,-78,-21,-47,-48,-49,-20,-29,-66,-92,-68,-77,170,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-103,171,-94,-34,-33,-89,-91,-104,-35,-28,-99,-93,182,-95,-98,191,192,-102,-73,198,-100,200,-101,]),'UNTIL':([3,4,6,7,8,10,11,12,13,14,15,16,17,21,26,27,29,33,37,39,43,44,45,46,47,48,49,50,51,52,58,62,63,65,66,72,73,78,80,85,102,103,104,113,116,117,118,123,124,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,152,153,155,156,157,158,159,170,171,180,182,191,192,198,200,],[-2,-4,-6,-7,-8,-10,-11,-12,-13,-14,-15,-16,-17,-27,-71,-72,-18,-3,-67,-70,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,105,-90,-34,-19,-36,-5,-9,-69,-78,-21,-47,-48,-49,-20,-29,-66,-92,-68,-77,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-103,-94,-34,-33,-89,-91,-104,-35,-28,-99,-93,-95,-98,-102,-73,-100,-101,]),'ELSEIF':([3,4,6,7,8,10,11,12,13,14,15,16,17,21,26,27,29,33,37,39,43,44,45,46,47,48,49,50,51,52,62,63,65,66,72,73,78,80,85,102,103,104,113,116,117,118,123,124,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,152,153,155,156,157,158,159,170,171,180,182,191,192,193,198,200,],[-2,-4,-6,-7,-8,-10,-11,-12,-13,-14,-15,-16,-17,-27,-71,-72,-18,-3,-67,-70,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-90,-34,-19,-36,-5,-9,-69,-78,-21,-47,-48,-49,-20,-29,-66,-92,-68,-77,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-103,173,-94,-34,-33,-89,-91,-104,-35,-28,-99,-93,-95,-98,-102,-73,173,-100,-101,]),'ELSE':([3,4,6,7,8,10,11,12,13,14,15,16,17,21,26,27,29,33,37,39,43,44,45,46,47,48,49,50,51,52,62,63,65,66,72,73,78,80,85,102,103,104,106,113,116,117,118,123,124,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,152,153,155,156,157,158,159,170,171,172,180,182,191,192,193,196,198,200,],[-2,-4,-6,-7,-8,-10,-11,-12,-13,-14,-15,-16,-17,-27,-71,-72,-18,-3,-67,-70,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-90,-34,-19,-36,-5,-9,-69,-78,-21,-47,-48,-49,150,-20,-29,-66,-92,-68,-77,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-103,-94,-34,-33,-89,-91,-104,-35,-28,-99,-93,150,-95,-98,-102,-73,-96,-97,-100,-101,]),'ATRIB':([5,18,21,60,62,63,74,75,84,116,152,153,159,168,],[34,-25,-27,107,110,111,-25,-26,130,-29,-34,-33,-28,179,]),'LCOLCH':([6,18,21,30,37,39,40,43,56,74,78,80,116,117,123,124,125,126,127,128,159,165,],[-31,-30,-27,67,-67,-70,83,-30,-31,-30,-69,-78,-29,-32,-68,-77,83,-87,-88,83,-28,-32,]),'DOT':([6,18,21,30,37,39,43,56,71,74,78,80,116,117,123,124,159,165,],[-31,-30,-27,68,-67,-70,-30,-31,120,-30,-69,-78,-29,-32,-68,-77,-28,-32,]),'COMMA':([18,21,26,27,43,44,45,46,47,48,49,50,51,52,60,63,66,74,80,81,82,84,102,103,104,116,117,118,124,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,151,152,153,157,159,161,168,169,183,187,192,],[36,-27,-71,-72,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,108,108,114,36,-78,126,126,-84,-47,-48,-49,-29,-66,-92,-77,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,175,108,-33,-104,-28,178,-83,-86,189,-85,-73,]),'LBRACE':([18,19,21,22,24,29,31,34,38,43,51,53,54,55,67,74,76,83,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,105,107,109,110,111,114,116,117,130,159,165,173,175,179,189,],[-65,40,-27,40,40,40,40,40,40,-65,40,40,40,40,40,-65,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-29,-66,40,-28,-66,40,40,40,40,]),'PLUS':([21,26,27,42,43,44,45,46,47,48,49,50,51,52,59,66,69,80,102,103,104,115,116,117,118,122,124,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,151,156,157,159,169,181,183,187,192,194,],[-27,-71,-72,87,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,87,87,87,-78,-47,-48,-49,87,-29,-66,-92,87,-77,87,-50,-51,-52,-53,-54,-55,87,87,87,87,87,87,87,87,87,87,87,87,-104,-28,87,87,87,87,-73,87,]),'MINUS':([21,22,24,26,27,29,31,34,38,42,43,44,45,46,47,48,49,50,51,52,53,54,55,59,66,67,69,76,80,83,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,107,109,110,111,114,115,116,117,118,122,124,129,130,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,151,156,157,159,169,173,175,179,181,183,187,189,192,194,],[-27,54,54,-71,-72,54,54,54,54,88,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,54,54,54,88,88,54,88,54,-78,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,-47,-48,-49,54,54,54,54,54,54,88,-29,-66,-92,88,-77,88,54,-50,-51,-52,-53,-54,-55,88,88,88,88,88,88,88,88,88,88,88,88,-104,-28,88,54,54,54,88,88,88,54,-73,88,]),'TIMES':([21,26,27,42,43,44,45,46,47,48,49,50,51,52,59,66,69,80,102,103,104,115,116,117,118,122,124,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,151,156,157,159,169,181,183,187,192,194,],[-27,-71,-72,89,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,89,89,89,-78,-47,89,-49,89,-29,-66,-92,89,-77,89,89,89,-52,-53,-54,-55,89,89,89,89,89,89,89,89,89,89,89,89,-104,-28,89,89,89,89,-73,89,]),'DIVIDE':([21,26,27,42,43,44,45,46,47,48,49,50,51,52,59,66,69,80,102,103,104,115,116,117,118,122,124,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,151,156,157,159,169,181,183,187,192,194,],[-27,-71,-72,90,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,90,90,90,-78,-47,90,-49,90,-29,-66,-92,90,-77,90,90,90,-52,-53,-54,-55,90,90,90,90,90,90,90,90,90,90,90,90,-104,-28,90,90,90,90,-73,90,]),'EXPO':([21,26,27,42,43,44,45,46,47,48,49,50,51,52,59,66,69,80,102,103,104,115,116,117,118,122,124,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,151,156,157,159,169,181,183,187,192,194,],[-27,-71,-72,91,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,91,91,91,-78,91,91,91,91,-29,-66,-92,91,-77,91,91,91,91,91,-54,91,91,91,91,91,91,91,91,91,91,91,91,91,-104,-28,91,91,91,91,-73,91,]),'PERCENTUAL':([21,26,27,42,43,44,45,46,47,48,49,50,51,52,59,66,69,80,102,103,104,115,116,117,118,122,124,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,151,156,157,159,169,181,183,187,192,194,],[-27,-71,-72,92,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,92,92,92,-78,-47,92,-49,92,-29,-66,-92,92,-77,92,92,92,-52,-53,-54,-55,92,92,92,92,92,92,92,92,92,92,92,92,-104,-28,92,92,92,92,-73,92,]),'CONCAT':([21,26,27,42,43,44,45,46,47,48,49,50,51,52,59,66,69,80,102,103,104,115,116,117,118,122,124,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,151,156,157,159,169,181,183,187,192,194,],[-27,-71,-72,93,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,93,93,93,-78,-47,-48,-49,93,-29,-66,-92,93,-77,93,-50,-51,-52,-53,-54,-55,-56,93,93,93,93,93,93,93,93,93,93,93,-104,-28,93,93,93,93,-73,93,]),'LT':([21,26,27,42,43,44,45,46,47,48,49,50,51,52,59,66,69,80,102,103,104,115,116,117,118,122,124,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,151,156,157,159,169,181,183,187,192,194,],[-27,-71,-72,94,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,94,94,94,-78,-47,-48,-49,94,-29,-66,-92,94,-77,94,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,94,94,94,94,94,-104,-28,94,94,94,94,-73,94,]),'LTEQUALS':([21,26,27,42,43,44,45,46,47,48,49,50,51,52,59,66,69,80,102,103,104,115,116,117,118,122,124,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,151,156,157,159,169,181,183,187,192,194,],[-27,-71,-72,95,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,95,95,95,-78,-47,-48,-49,95,-29,-66,-92,95,-77,95,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,95,95,95,95,95,-104,-28,95,95,95,95,-73,95,]),'GT':([21,26,27,42,43,44,45,46,47,48,49,50,51,52,59,66,69,80,102,103,104,115,116,117,118,122,124,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,151,156,157,159,169,181,183,187,192,194,],[-27,-71,-72,96,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,96,96,96,-78,-47,-48,-49,96,-29,-66,-92,96,-77,96,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,96,96,96,96,96,-104,-28,96,96,96,96,-73,96,]),'GTEQUALS':([21,26,27,42,43,44,45,46,47,48,49,50,51,52,59,66,69,80,102,103,104,115,116,117,118,122,124,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,151,156,157,159,169,181,183,187,192,194,],[-27,-71,-72,97,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,97,97,97,-78,-47,-48,-49,97,-29,-66,-92,97,-77,97,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,97,97,97,97,97,-104,-28,97,97,97,97,-73,97,]),'EQUALS':([21,26,27,42,43,44,45,46,47,48,49,50,51,52,59,66,69,80,102,103,104,115,116,117,118,122,124,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,151,156,157,159,169,181,183,187,192,194,],[-27,-71,-72,98,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,98,98,98,-78,-47,-48,-49,98,-29,-66,-92,98,-77,98,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,98,98,98,98,98,-104,-28,98,98,98,98,-73,98,]),'DIF':([21,26,27,42,43,44,45,46,47,48,49,50,51,52,59,66,69,80,102,103,104,115,116,117,118,122,124,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,151,156,157,159,169,181,183,187,192,194,],[-27,-71,-72,99,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,99,99,99,-78,-47,-48,-49,99,-29,-66,-92,99,-77,99,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,99,99,99,99,99,-104,-28,99,99,99,99,-73,99,]),'AND':([21,26,27,42,43,44,45,46,47,48,49,50,51,52,59,66,69,80,102,103,104,115,116,117,118,122,124,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,151,156,157,159,169,181,183,187,192,194,],[-27,-71,-72,100,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,100,100,100,-78,-47,-48,-49,100,-29,-66,-92,100,-77,100,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,100,100,100,100,-104,-28,100,100,100,100,-73,100,]),'OR':([21,26,27,42,43,44,45,46,47,48,49,50,51,52,59,66,69,80,102,103,104,115,116,117,118,122,124,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,151,156,157,159,169,181,183,187,192,194,],[-27,-71,-72,101,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,101,101,101,-78,-47,-48,-49,101,-29,-66,-92,101,-77,101,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,101,101,101,-104,-28,101,101,101,101,-73,101,]),'THEN':([21,26,27,43,44,45,46,47,48,49,50,51,52,59,80,102,103,104,116,117,118,124,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,157,159,181,192,],[-27,-71,-72,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,106,-78,-47,-48,-49,-29,-66,-92,-77,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-104,-28,188,-73,]),'RPAREN':([21,26,27,38,43,44,45,46,47,48,49,50,51,52,66,69,77,80,102,103,104,116,117,118,122,124,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,152,153,157,158,159,160,161,162,186,192,],[-27,-71,-72,78,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-36,117,123,-78,-47,-48,-49,-29,-66,-92,165,-77,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-34,-33,-104,-35,-28,177,-74,-76,-75,-73,]),'RCOLCH':([21,26,27,43,44,45,46,47,48,49,50,51,52,80,102,103,104,115,116,117,118,124,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,157,159,192,],[-27,-71,-72,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-78,-47,-48,-49,159,-29,-66,-92,-77,168,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-104,-28,-73,]),'RBRACE':([21,26,27,40,43,44,45,46,47,48,49,50,51,52,79,80,81,82,84,102,103,104,116,117,118,124,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,157,159,166,167,168,169,187,192,],[-27,-71,-72,80,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,124,-78,-79,-81,-84,-47,-48,-49,-29,-66,-92,-77,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-104,-28,-80,-82,-83,-86,-85,-73,]),'NIL':([22,24,29,31,34,38,53,54,55,67,76,83,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,105,107,109,110,111,114,130,173,175,179,189,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'FALSE':([22,24,29,31,34,38,53,54,55,67,76,83,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,105,107,109,110,111,114,130,173,175,179,189,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'TRUE':([22,24,29,31,34,38,53,54,55,67,76,83,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,105,107,109,110,111,114,130,173,175,179,189,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'NUMBER':([22,24,29,31,34,38,53,54,55,67,76,83,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,105,107,109,110,111,114,130,173,175,179,189,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'STRING':([22,24,29,31,34,38,53,54,55,67,76,83,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,105,107,109,110,111,114,130,173,175,179,189,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'VARARGS':([22,24,29,31,34,38,53,54,55,67,76,83,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,105,107,109,110,111,114,119,130,173,175,178,179,189,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,162,49,49,49,186,49,49,]),'TAG':([22,24,29,31,34,38,53,54,55,67,76,83,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,105,107,109,110,111,114,130,173,175,179,189,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'NOT':([22,24,29,31,34,38,53,54,55,67,76,83,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,105,107,109,110,111,114,130,173,175,179,189,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'IN':([60,61,152,153,],[-34,109,-34,-33,]),'COLON':([71,],[121,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'block':([0,3,9,23,86,106,150,176,177,188,190,197,],[2,33,35,58,131,148,174,184,185,193,195,199,]),'command':([0,3,9,23,86,106,150,176,177,188,190,197,],[3,3,3,3,3,3,3,3,3,3,3,3,]),'list_vars':([0,3,9,23,36,86,106,150,176,177,188,190,197,],[5,5,5,5,75,5,5,5,5,5,5,5,5,]),'call_function':([0,3,9,22,23,24,29,31,34,36,38,53,54,55,67,76,83,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,105,106,107,109,110,111,114,130,150,173,175,176,177,179,188,189,190,197,],[6,6,6,56,6,56,56,56,56,56,56,56,56,56,56,56,56,6,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,6,56,56,56,56,56,56,6,56,56,6,6,56,6,56,6,6,]),'rotulo':([0,3,9,23,86,106,150,176,177,188,190,197,],[7,7,7,7,7,7,7,7,7,7,7,7,]),'struct_while':([0,3,9,23,86,106,150,176,177,188,190,197,],[10,10,10,10,10,10,10,10,10,10,10,10,]),'struct_repeat':([0,3,9,23,86,106,150,176,177,188,190,197,],[11,11,11,11,11,11,11,11,11,11,11,11,]),'if':([0,3,9,23,86,106,150,176,177,188,190,197,],[12,12,12,12,12,12,12,12,12,12,12,12,]),'struct_for':([0,3,9,23,86,106,150,176,177,188,190,197,],[13,13,13,13,13,13,13,13,13,13,13,13,]),'struct_for_in':([0,3,9,23,86,106,150,176,177,188,190,197,],[14,14,14,14,14,14,14,14,14,14,14,14,]),'def_function':([0,3,9,22,23,24,29,31,34,38,53,54,55,67,76,83,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,105,106,107,109,110,111,114,130,150,173,175,176,177,179,188,189,190,197,],[15,15,15,50,15,50,50,50,50,50,50,50,50,50,50,50,15,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,15,50,50,50,50,50,50,15,50,50,15,15,50,15,50,15,15,]),'local_var':([0,3,9,23,86,106,150,176,177,188,190,197,],[16,16,16,16,16,16,16,16,16,16,16,16,]),'command_ret':([0,3,9,23,86,106,150,176,177,188,190,197,],[17,17,17,17,17,17,17,17,17,17,17,17,]),'var':([0,3,9,22,23,24,29,31,34,36,38,53,54,55,67,76,83,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,105,106,107,109,110,111,114,130,150,173,175,176,177,179,188,189,190,197,],[18,18,18,43,18,43,43,43,43,74,43,43,43,43,43,43,43,18,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,18,43,43,43,43,43,43,18,43,43,18,18,43,18,43,18,18,]),'exp_prefix':([0,3,9,22,23,24,29,31,34,36,38,53,54,55,67,76,83,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,105,106,107,109,110,111,114,130,150,173,175,176,177,179,188,189,190,197,],[19,19,19,51,19,51,51,51,51,19,51,51,51,51,51,51,51,19,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,19,51,51,51,51,51,51,19,51,51,19,19,51,19,51,19,19,]),'function':([0,3,9,22,23,24,29,31,34,38,53,54,55,67,76,83,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,105,106,107,109,110,111,114,130,150,173,175,176,177,179,188,189,190,197,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'local_function':([0,3,9,22,23,24,29,31,34,38,53,54,55,67,76,83,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,105,106,107,109,110,111,114,130,150,173,175,176,177,179,188,189,190,197,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'prefix_exp':([0,3,9,22,23,24,29,31,34,36,38,53,54,55,67,76,83,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,105,106,107,109,110,111,114,130,150,173,175,176,177,179,188,189,190,197,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'args':([19,51,],[37,37,]),'construct_table':([19,22,24,29,31,34,38,51,53,54,55,67,76,83,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,105,107,109,110,111,114,130,173,175,179,189,],[39,52,52,52,52,52,52,39,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'exp':([22,24,29,31,34,38,53,54,55,67,76,83,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,105,107,109,110,111,114,130,173,175,179,189,],[42,59,66,69,66,66,102,103,104,115,122,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,151,66,66,156,66,169,181,183,187,194,]),'list_names':([25,28,108,119,],[61,62,153,161,]),'list_exps':([29,34,38,109,110,114,],[65,72,77,154,155,158,]),'name_function':([32,],[70,]),'list_fields':([40,125,128,],[79,166,167,]),'field':([40,125,128,],[81,81,81,]),'field_empty':([40,125,128,],[82,82,82,]),'body_function':([70,112,],[118,157,]),'separator_fields':([81,82,],[125,128,]),'else':([106,172,],[149,180,]),'list_pars':([119,],[160,]),'else_if':([148,193,],[172,196,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> block','program',1,'p_program','ExpressionLanguageParser.py',13),
  ('block -> command','block',1,'p_block','ExpressionLanguageParser.py',18),
  ('block -> command block','block',2,'p_block','ExpressionLanguageParser.py',19),
  ('command -> SEMICOLON','command',1,'p_command','ExpressionLanguageParser.py',25),
  ('command -> list_vars ATRIB list_exps','command',3,'p_command','ExpressionLanguageParser.py',26),
  ('command -> call_function','command',1,'p_command','ExpressionLanguageParser.py',27),
  ('command -> rotulo','command',1,'p_command','ExpressionLanguageParser.py',28),
  ('command -> BREAK','command',1,'p_command','ExpressionLanguageParser.py',29),
  ('command -> DO block END','command',3,'p_command','ExpressionLanguageParser.py',30),
  ('command -> struct_while','command',1,'p_command','ExpressionLanguageParser.py',31),
  ('command -> struct_repeat','command',1,'p_command','ExpressionLanguageParser.py',32),
  ('command -> if','command',1,'p_command','ExpressionLanguageParser.py',33),
  ('command -> struct_for','command',1,'p_command','ExpressionLanguageParser.py',34),
  ('command -> struct_for_in','command',1,'p_command','ExpressionLanguageParser.py',35),
  ('command -> def_function','command',1,'p_command','ExpressionLanguageParser.py',36),
  ('command -> local_var','command',1,'p_command','ExpressionLanguageParser.py',37),
  ('command -> command_ret','command',1,'p_command','ExpressionLanguageParser.py',38),
  ('command_ret -> RETURN','command_ret',1,'p_command_ret','ExpressionLanguageParser.py',43),
  ('command_ret -> RETURN list_exps','command_ret',2,'p_command_ret','ExpressionLanguageParser.py',44),
  ('command_ret -> RETURN list_exps SEMICOLON','command_ret',3,'p_command_ret','ExpressionLanguageParser.py',45),
  ('rotulo -> DUALCOLON NAME DUALCOLON','rotulo',3,'p_rotulo','ExpressionLanguageParser.py',50),
  ('name_function -> NAME','name_function',1,'p_name_function','ExpressionLanguageParser.py',55),
  ('name_function -> NAME DOT NAME','name_function',3,'p_name_function','ExpressionLanguageParser.py',56),
  ('name_function -> NAME COLON NAME','name_function',3,'p_name_function','ExpressionLanguageParser.py',57),
  ('list_vars -> var','list_vars',1,'p_list_vars','ExpressionLanguageParser.py',62),
  ('list_vars -> var COMMA list_vars','list_vars',3,'p_list_vars','ExpressionLanguageParser.py',63),
  ('var -> NAME','var',1,'p_var','ExpressionLanguageParser.py',68),
  ('var -> prefix_exp LCOLCH exp RCOLCH','var',4,'p_var','ExpressionLanguageParser.py',69),
  ('var -> prefix_exp DOT NAME','var',3,'p_var','ExpressionLanguageParser.py',70),
  ('prefix_exp -> var','prefix_exp',1,'p_prefix_exp','ExpressionLanguageParser.py',75),
  ('prefix_exp -> call_function','prefix_exp',1,'p_prefix_exp','ExpressionLanguageParser.py',76),
  ('prefix_exp -> LPAREN exp RPAREN','prefix_exp',3,'p_prefix_exp','ExpressionLanguageParser.py',77),
  ('list_names -> NAME COMMA list_names','list_names',3,'p_list_names','ExpressionLanguageParser.py',82),
  ('list_names -> NAME','list_names',1,'p_list_names','ExpressionLanguageParser.py',83),
  ('list_exps -> exp COMMA list_exps','list_exps',3,'p_list_exps','ExpressionLanguageParser.py',88),
  ('list_exps -> exp','list_exps',1,'p_list_exps','ExpressionLanguageParser.py',89),
  ('exp -> var','exp',1,'p_exp','ExpressionLanguageParser.py',94),
  ('exp -> NIL','exp',1,'p_exp','ExpressionLanguageParser.py',95),
  ('exp -> FALSE','exp',1,'p_exp','ExpressionLanguageParser.py',96),
  ('exp -> TRUE','exp',1,'p_exp','ExpressionLanguageParser.py',97),
  ('exp -> NUMBER','exp',1,'p_exp','ExpressionLanguageParser.py',98),
  ('exp -> STRING','exp',1,'p_exp','ExpressionLanguageParser.py',99),
  ('exp -> VARARGS','exp',1,'p_exp','ExpressionLanguageParser.py',100),
  ('exp -> def_function','exp',1,'p_exp','ExpressionLanguageParser.py',101),
  ('exp -> exp_prefix','exp',1,'p_exp','ExpressionLanguageParser.py',102),
  ('exp -> construct_table','exp',1,'p_exp','ExpressionLanguageParser.py',103),
  ('exp -> TAG exp','exp',2,'p_exp','ExpressionLanguageParser.py',104),
  ('exp -> MINUS exp','exp',2,'p_exp','ExpressionLanguageParser.py',105),
  ('exp -> NOT exp','exp',2,'p_exp','ExpressionLanguageParser.py',106),
  ('exp -> exp PLUS exp','exp',3,'p_exp','ExpressionLanguageParser.py',107),
  ('exp -> exp MINUS exp','exp',3,'p_exp','ExpressionLanguageParser.py',108),
  ('exp -> exp TIMES exp','exp',3,'p_exp','ExpressionLanguageParser.py',109),
  ('exp -> exp DIVIDE exp','exp',3,'p_exp','ExpressionLanguageParser.py',110),
  ('exp -> exp EXPO exp','exp',3,'p_exp','ExpressionLanguageParser.py',111),
  ('exp -> exp PERCENTUAL exp','exp',3,'p_exp','ExpressionLanguageParser.py',112),
  ('exp -> exp CONCAT exp','exp',3,'p_exp','ExpressionLanguageParser.py',113),
  ('exp -> exp LT exp','exp',3,'p_exp','ExpressionLanguageParser.py',114),
  ('exp -> exp LTEQUALS exp','exp',3,'p_exp','ExpressionLanguageParser.py',115),
  ('exp -> exp GT exp','exp',3,'p_exp','ExpressionLanguageParser.py',116),
  ('exp -> exp GTEQUALS exp','exp',3,'p_exp','ExpressionLanguageParser.py',117),
  ('exp -> exp EQUALS exp','exp',3,'p_exp','ExpressionLanguageParser.py',118),
  ('exp -> exp DIF exp','exp',3,'p_exp','ExpressionLanguageParser.py',119),
  ('exp -> exp AND exp','exp',3,'p_exp','ExpressionLanguageParser.py',120),
  ('exp -> exp OR exp','exp',3,'p_exp','ExpressionLanguageParser.py',121),
  ('exp_prefix -> var','exp_prefix',1,'p_exp_prefix','ExpressionLanguageParser.py',126),
  ('exp_prefix -> LPAREN exp RPAREN','exp_prefix',3,'p_exp_prefix','ExpressionLanguageParser.py',127),
  ('call_function -> exp_prefix args','call_function',2,'p_call_function','ExpressionLanguageParser.py',132),
  ('args -> LPAREN list_exps RPAREN','args',3,'p_args','ExpressionLanguageParser.py',137),
  ('args -> LPAREN RPAREN','args',2,'p_args','ExpressionLanguageParser.py',138),
  ('args -> construct_table','args',1,'p_args','ExpressionLanguageParser.py',139),
  ('def_function -> function','def_function',1,'p_def_function','ExpressionLanguageParser.py',144),
  ('def_function -> local_function','def_function',1,'p_def_function','ExpressionLanguageParser.py',145),
  ('body_function -> LPAREN list_pars RPAREN block END','body_function',5,'p_body_function','ExpressionLanguageParser.py',150),
  ('list_pars -> list_names','list_pars',1,'p_list_pars','ExpressionLanguageParser.py',155),
  ('list_pars -> list_names COMMA VARARGS','list_pars',3,'p_list_pars','ExpressionLanguageParser.py',156),
  ('list_pars -> VARARGS','list_pars',1,'p_list_pars','ExpressionLanguageParser.py',157),
  ('construct_table -> LBRACE list_fields RBRACE','construct_table',3,'p_construct_table','ExpressionLanguageParser.py',162),
  ('construct_table -> LBRACE RBRACE','construct_table',2,'p_construct_table','ExpressionLanguageParser.py',163),
  ('list_fields -> field','list_fields',1,'p_list_fields','ExpressionLanguageParser.py',168),
  ('list_fields -> field separator_fields list_fields','list_fields',3,'p_list_fields','ExpressionLanguageParser.py',169),
  ('list_fields -> field_empty','list_fields',1,'p_list_fields','ExpressionLanguageParser.py',170),
  ('list_fields -> field_empty separator_fields list_fields','list_fields',3,'p_list_fields','ExpressionLanguageParser.py',171),
  ('field_empty -> LCOLCH exp RCOLCH','field_empty',3,'p_field_empty','ExpressionLanguageParser.py',176),
  ('field_empty -> NAME','field_empty',1,'p_field_empty','ExpressionLanguageParser.py',177),
  ('field -> LCOLCH exp RCOLCH ATRIB exp','field',5,'p_field','ExpressionLanguageParser.py',182),
  ('field -> NAME ATRIB exp','field',3,'p_field','ExpressionLanguageParser.py',183),
  ('separator_fields -> COMMA','separator_fields',1,'p_separator_fields','ExpressionLanguageParser.py',188),
  ('separator_fields -> SEMICOLON','separator_fields',1,'p_separator_fields','ExpressionLanguageParser.py',189),
  ('local_var -> LOCAL list_names ATRIB list_exps','local_var',4,'p_local_var','ExpressionLanguageParser.py',194),
  ('local_var -> LOCAL list_names','local_var',2,'p_local_var','ExpressionLanguageParser.py',195),
  ('local_var -> LOCAL NAME ATRIB exp','local_var',4,'p_local_var','ExpressionLanguageParser.py',196),
  ('function -> FUNCTION name_function body_function','function',3,'p_function','ExpressionLanguageParser.py',201),
  ('if -> IF exp THEN block END','if',5,'p_if','ExpressionLanguageParser.py',206),
  ('if -> IF exp THEN else','if',4,'p_if','ExpressionLanguageParser.py',207),
  ('if -> IF exp THEN block else_if else','if',6,'p_if','ExpressionLanguageParser.py',208),
  ('else_if -> ELSEIF exp THEN block','else_if',4,'p_else_if','ExpressionLanguageParser.py',211),
  ('else_if -> ELSEIF exp THEN block else_if','else_if',5,'p_else_if','ExpressionLanguageParser.py',212),
  ('else -> ELSE block END','else',3,'p_else','ExpressionLanguageParser.py',215),
  ('struct_while -> WHILE exp DO block END','struct_while',5,'p_struct_while','ExpressionLanguageParser.py',220),
  ('struct_for -> FOR NAME ATRIB exp COMMA exp DO block END','struct_for',9,'p_struct_for','ExpressionLanguageParser.py',225),
  ('struct_for -> FOR NAME ATRIB exp COMMA exp COMMA exp DO block END','struct_for',11,'p_struct_for','ExpressionLanguageParser.py',226),
  ('struct_for_in -> FOR list_names IN list_exps DO block END','struct_for_in',7,'p_struct_for_in','ExpressionLanguageParser.py',231),
  ('struct_repeat -> REPEAT block UNTIL exp','struct_repeat',4,'p_struct_repeat','ExpressionLanguageParser.py',236),
  ('local_function -> LOCAL FUNCTION NAME body_function','local_function',4,'p_local_function','ExpressionLanguageParser.py',241),
]
