
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftGTLTGTEQUALSLTEQUALSEQUALSDIFleftCONCATleftPLUSMINUSleftPERCENTUALTIMESDIVIDEleftNOTTAGleftEXPOAND ATRIB BREAK COLON COMMA CONCAT DIF DIVIDE DO DOT DUALCOLON ELSE ELSEIF END EQUALS EXPO FALSE FOR FUNCTION GT GTEQUALS IF IN LBRACE LCOLCH LOCAL LPAREN LT LTEQUALS MINUS NAME NIL NOT NUMBER OR PERCENTUAL PLUS RBRACE RCOLCH REPEAT RETURN RPAREN SEMICOLON STRING TAG THEN TIMES TRUE UNTIL VAR VARARGS WHILEprogram : blockblock : command\n             | command block \n             command : SEMICOLON\n               | list_vars ATRIB list_exps\n               | call_function\n               | rotulo\n               | BREAK\n               | DO block END\n               | struct_while\n               | struct_repeat\n               | if\n               | struct_for\n               | struct_for_in\n               | def_function\n               | local_var\n               | command_retlist_command : command list_command\n                  | commandcommand_ret : RETURN\n                   | RETURN list_exps\n                   | RETURN list_exps SEMICOLONrotulo : DUALCOLON NAME DUALCOLONname_function : NAME\n                     | NAME DOT NAME\n                     | NAME COLON NAMElist_vars : var \n                 | var COMMA list_varsvar : NAME \n           | prefix_exp LCOLCH exp RCOLCH\n           | prefix_exp DOT NAME prefix_exp : var\n                   | call_function \n                   | LPAREN exp RPARENlist_names : NAME COMMA list_names\n                  | NAMElist_exps : exp COMMA list_exps\n                 | expexp : NIL \n           | FALSE\n           | TRUE \n           | NUMBER\n           | STRING \n           | VARARGS \n           | def_function \n           | exp_prefix\n           | construct_table\n           | TAG exp\n           | MINUS exp\n           | NOT exp\n           | exp PLUS exp\n           | exp MINUS exp\n           | exp TIMES exp\n           | exp DIVIDE exp\n           | exp EXPO exp\n           | exp PERCENTUAL exp\n           | exp CONCAT exp\n           | exp LT exp\n           | exp LTEQUALS exp\n           | exp GT exp\n           | exp GTEQUALS exp\n           | exp EQUALS exp\n           | exp DIF exp\n           | exp AND exp\n           | exp OR expexp_prefix : VAR \n                  | call_function\n                  | LPAREN exp RPARENcall_function : exp_prefix args\n                     | exp_prefix COLON NAME args args : LPAREN list_exps RPAREN\n             | construct_tabledef_function : function \n                    | local_functionbody_function : LPAREN list_pars RPAREN block ENDlist_pars : list_names COMMA VARARGS\n                 | VARARGSconstruct_table : LBRACE list_fields RBRACE\n                       | LBRACE RBRACElist_fields : field \n                   | field separator_fields list_fields\n                   | field_empty\n                   | field_empty separator_fields list_fieldsfield_empty : LCOLCH exp RCOLCH\n                   | NAMEfield : LCOLCH exp RCOLCH ATRIB exp\n             | NAME ATRIB exp separator_fields : COMMA\n                        | SEMICOLONlocal_var : LOCAL list_names ATRIB list_exps \n                 | LOCAL NAME ATRIB expfunction : FUNCTION body_functionif : IF exp THEN block END\n          | IF exp THEN elseelse : ELSE block ENDstruct_while : WHILE exp DO block ENDstruct_for : FOR NAME ATRIB exp COMMA exp DO block END\n                  | FOR NAME ATRIB exp COMMA exp COMMA exp DO block ENDstruct_for_in : FOR list_names IN list_exps DO block ENDstruct_repeat : REPEAT block UNTIL explocal_function : LOCAL FUNCTION name_function body_function'
    
_lr_action_items = {'SEMICOLON':([0,3,4,6,7,8,9,10,11,12,13,14,15,16,17,23,26,27,29,31,38,41,45,46,47,48,49,50,51,52,53,57,67,68,72,74,75,82,83,84,86,87,88,104,105,106,109,117,127,128,129,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,155,156,160,161,162,165,167,172,173,174,175,178,184,187,188,190,191,194,195,197,],[4,4,-4,-6,-7,-8,4,-10,-11,-12,-13,-14,-15,-16,-17,4,-73,-74,-20,-66,-69,-72,-39,-40,-41,-42,-43,-44,-45,-46,-47,-67,117,-38,-92,-5,-9,-79,132,132,-85,-23,4,-48,-49,-50,4,-22,-70,-71,-78,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-68,-100,-94,4,-90,-91,-101,-37,4,-84,-87,-96,-93,4,-95,-75,-86,4,-99,4,-97,-98,]),'BREAK':([0,3,4,6,7,8,9,10,11,12,13,14,15,16,17,23,26,27,29,31,38,41,45,46,47,48,49,50,51,52,53,57,67,68,72,74,75,82,87,88,104,105,106,109,117,127,128,129,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,155,156,160,161,162,165,167,174,175,178,184,187,190,191,194,195,197,],[8,8,-4,-6,-7,-8,8,-10,-11,-12,-13,-14,-15,-16,-17,8,-73,-74,-20,-66,-69,-72,-39,-40,-41,-42,-43,-44,-45,-46,-47,-67,-21,-38,-92,-5,-9,-79,-23,8,-48,-49,-50,8,-22,-70,-71,-78,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-68,-100,-94,8,-90,-91,-101,-37,8,-96,-93,8,-95,-75,8,-99,8,-97,-98,]),'DO':([0,3,4,6,7,8,9,10,11,12,13,14,15,16,17,23,26,27,29,31,38,41,44,45,46,47,48,49,50,51,52,53,57,67,68,72,74,75,82,87,88,104,105,106,109,117,127,128,129,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,155,156,159,160,161,162,165,167,174,175,178,184,185,187,190,191,192,194,195,197,],[9,9,-4,-6,-7,-8,9,-10,-11,-12,-13,-14,-15,-16,-17,9,-73,-74,-20,-66,-69,-72,88,-39,-40,-41,-42,-43,-44,-45,-46,-47,-67,-21,-38,-92,-5,-9,-79,-23,9,-48,-49,-50,9,-22,-70,-71,-78,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-68,-100,-94,9,178,-90,-91,-101,-37,9,-96,-93,9,-95,190,-75,9,-99,194,9,-97,-98,]),'DUALCOLON':([0,3,4,6,7,8,9,10,11,12,13,14,15,16,17,23,26,27,29,31,38,41,43,45,46,47,48,49,50,51,52,53,57,67,68,72,74,75,82,87,88,104,105,106,109,117,127,128,129,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,155,156,160,161,162,165,167,174,175,178,184,187,190,191,194,195,197,],[21,21,-4,-6,-7,-8,21,-10,-11,-12,-13,-14,-15,-16,-17,21,-73,-74,-20,-66,-69,-72,87,-39,-40,-41,-42,-43,-44,-45,-46,-47,-67,-21,-38,-92,-5,-9,-79,-23,21,-48,-49,-50,21,-22,-70,-71,-78,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-68,-100,-94,21,-90,-91,-101,-37,21,-96,-93,21,-95,-75,21,-99,21,-97,-98,]),'WHILE':([0,3,4,6,7,8,9,10,11,12,13,14,15,16,17,23,26,27,29,31,38,41,45,46,47,48,49,50,51,52,53,57,67,68,72,74,75,82,87,88,104,105,106,109,117,127,128,129,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,155,156,160,161,162,165,167,174,175,178,184,187,190,191,194,195,197,],[22,22,-4,-6,-7,-8,22,-10,-11,-12,-13,-14,-15,-16,-17,22,-73,-74,-20,-66,-69,-72,-39,-40,-41,-42,-43,-44,-45,-46,-47,-67,-21,-38,-92,-5,-9,-79,-23,22,-48,-49,-50,22,-22,-70,-71,-78,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-68,-100,-94,22,-90,-91,-101,-37,22,-96,-93,22,-95,-75,22,-99,22,-97,-98,]),'REPEAT':([0,3,4,6,7,8,9,10,11,12,13,14,15,16,17,23,26,27,29,31,38,41,45,46,47,48,49,50,51,52,53,57,67,68,72,74,75,82,87,88,104,105,106,109,117,127,128,129,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,155,156,160,161,162,165,167,174,175,178,184,187,190,191,194,195,197,],[23,23,-4,-6,-7,-8,23,-10,-11,-12,-13,-14,-15,-16,-17,23,-73,-74,-20,-66,-69,-72,-39,-40,-41,-42,-43,-44,-45,-46,-47,-67,-21,-38,-92,-5,-9,-79,-23,23,-48,-49,-50,23,-22,-70,-71,-78,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-68,-100,-94,23,-90,-91,-101,-37,23,-96,-93,23,-95,-75,23,-99,23,-97,-98,]),'IF':([0,3,4,6,7,8,9,10,11,12,13,14,15,16,17,23,26,27,29,31,38,41,45,46,47,48,49,50,51,52,53,57,67,68,72,74,75,82,87,88,104,105,106,109,117,127,128,129,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,155,156,160,161,162,165,167,174,175,178,184,187,190,191,194,195,197,],[24,24,-4,-6,-7,-8,24,-10,-11,-12,-13,-14,-15,-16,-17,24,-73,-74,-20,-66,-69,-72,-39,-40,-41,-42,-43,-44,-45,-46,-47,-67,-21,-38,-92,-5,-9,-79,-23,24,-48,-49,-50,24,-22,-70,-71,-78,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-68,-100,-94,24,-90,-91,-101,-37,24,-96,-93,24,-95,-75,24,-99,24,-97,-98,]),'FOR':([0,3,4,6,7,8,9,10,11,12,13,14,15,16,17,23,26,27,29,31,38,41,45,46,47,48,49,50,51,52,53,57,67,68,72,74,75,82,87,88,104,105,106,109,117,127,128,129,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,155,156,160,161,162,165,167,174,175,178,184,187,190,191,194,195,197,],[25,25,-4,-6,-7,-8,25,-10,-11,-12,-13,-14,-15,-16,-17,25,-73,-74,-20,-66,-69,-72,-39,-40,-41,-42,-43,-44,-45,-46,-47,-67,-21,-38,-92,-5,-9,-79,-23,25,-48,-49,-50,25,-22,-70,-71,-78,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-68,-100,-94,25,-90,-91,-101,-37,25,-96,-93,25,-95,-75,25,-99,25,-97,-98,]),'LOCAL':([0,3,4,6,7,8,9,10,11,12,13,14,15,16,17,22,23,24,26,27,29,31,32,35,38,40,41,45,46,47,48,49,50,51,52,53,54,55,56,57,58,67,68,69,72,74,75,78,82,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,112,113,114,117,118,127,128,129,135,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,155,156,160,161,162,165,167,174,175,177,178,183,184,187,189,190,191,194,195,197,],[28,28,-4,-6,-7,-8,28,-10,-11,-12,-13,-14,-15,-16,-17,59,28,59,-73,-74,59,-66,59,59,-69,59,-72,-39,-40,-41,-42,-43,-44,-45,-46,-47,59,59,59,-67,59,-21,-38,59,-92,-5,-9,59,-79,59,-23,28,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,-48,-49,-50,59,28,59,59,59,59,-22,59,-70,-71,-78,59,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-68,-100,-94,28,-90,-91,-101,-37,28,-96,-93,59,28,59,-95,-75,59,28,-99,28,-97,-98,]),'RETURN':([0,3,4,6,7,8,9,10,11,12,13,14,15,16,17,23,26,27,29,31,38,41,45,46,47,48,49,50,51,52,53,57,67,68,72,74,75,82,87,88,104,105,106,109,117,127,128,129,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,155,156,160,161,162,165,167,174,175,178,184,187,190,191,194,195,197,],[29,29,-4,-6,-7,-8,29,-10,-11,-12,-13,-14,-15,-16,-17,29,-73,-74,-20,-66,-69,-72,-39,-40,-41,-42,-43,-44,-45,-46,-47,-67,-21,-38,-92,-5,-9,-79,-23,29,-48,-49,-50,29,-22,-70,-71,-78,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-68,-100,-94,29,-90,-91,-101,-37,29,-96,-93,29,-95,-75,29,-99,29,-97,-98,]),'NAME':([0,3,4,6,7,8,9,10,11,12,13,14,15,16,17,21,23,25,26,27,28,29,31,37,38,39,41,42,45,46,47,48,49,50,51,52,53,57,66,67,68,70,72,73,74,75,82,87,88,104,105,106,109,111,117,127,128,129,130,131,132,133,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,155,156,160,161,162,163,164,165,167,174,175,178,184,187,190,191,194,195,197,],[20,20,-4,-6,-7,-8,20,-10,-11,-12,-13,-14,-15,-16,-17,43,20,62,-73,-74,65,-20,-66,20,-69,79,-72,86,-39,-40,-41,-42,-43,-44,-45,-46,-47,-67,116,-21,-38,120,-92,125,-5,-9,-79,-23,20,-48,-49,-50,20,125,-22,-70,-71,-78,86,-88,-89,86,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-68,-100,-94,20,-90,-91,-101,179,180,-37,20,-96,-93,20,-95,-75,20,-99,20,-97,-98,]),'VAR':([0,3,4,6,7,8,9,10,11,12,13,14,15,16,17,22,23,24,26,27,29,31,32,35,37,38,40,41,45,46,47,48,49,50,51,52,53,54,55,56,57,58,67,68,69,72,74,75,78,82,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,112,113,114,117,118,127,128,129,135,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,155,156,160,161,162,165,167,174,175,177,178,183,184,187,189,190,191,194,195,197,],[31,31,-4,-6,-7,-8,31,-10,-11,-12,-13,-14,-15,-16,-17,31,31,31,-73,-74,31,-66,31,31,31,-69,31,-72,-39,-40,-41,-42,-43,-44,-45,-46,-47,31,31,31,-67,31,-21,-38,31,-92,-5,-9,31,-79,31,-23,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,-48,-49,-50,31,31,31,31,31,31,-22,31,-70,-71,-78,31,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-68,-100,-94,31,-90,-91,-101,-37,31,-96,-93,31,31,31,-95,-75,31,31,-99,31,-97,-98,]),'LPAREN':([0,3,4,6,7,8,9,10,11,12,13,14,15,16,17,19,22,23,24,26,27,29,31,32,33,35,37,38,40,41,45,46,47,48,49,50,51,52,53,54,55,56,57,58,67,68,69,72,74,75,77,78,79,82,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,112,113,114,115,116,117,118,121,127,128,129,135,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,155,156,160,161,162,165,167,169,174,175,177,178,179,180,183,184,187,189,190,191,194,195,197,],[32,32,-4,-6,-7,-8,32,-10,-11,-12,-13,-14,-15,-16,-17,40,58,32,58,-73,-74,58,-66,58,73,58,78,-69,58,-72,-39,-40,-41,-42,-43,-44,-45,40,-47,58,58,58,-67,58,-21,-38,58,-92,-5,-9,-67,58,40,-79,58,-23,32,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,-48,-49,-50,58,32,58,58,58,58,73,-24,-22,58,-68,-70,-71,-78,58,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-68,-100,-94,32,-90,-91,-101,-37,32,-68,-96,-93,58,32,-25,-26,58,-95,-75,58,32,-99,32,-97,-98,]),'FUNCTION':([0,3,4,6,7,8,9,10,11,12,13,14,15,16,17,22,23,24,26,27,28,29,31,32,35,38,40,41,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,67,68,69,72,74,75,78,82,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,112,113,114,117,118,127,128,129,135,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,155,156,160,161,162,165,167,174,175,177,178,183,184,187,189,190,191,194,195,197,],[33,33,-4,-6,-7,-8,33,-10,-11,-12,-13,-14,-15,-16,-17,33,33,33,-73,-74,66,33,-66,33,33,-69,33,-72,-39,-40,-41,-42,-43,-44,-45,-46,-47,33,33,33,-67,33,66,-21,-38,33,-92,-5,-9,33,-79,33,-23,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-48,-49,-50,33,33,33,33,33,33,-22,33,-70,-71,-78,33,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-68,-100,-94,33,-90,-91,-101,-37,33,-96,-93,33,33,33,-95,-75,33,33,-99,33,-97,-98,]),'$end':([1,2,3,4,6,7,8,10,11,12,13,14,15,16,17,26,27,29,31,34,38,41,45,46,47,48,49,50,51,52,53,57,67,68,72,74,75,82,87,104,105,106,117,127,128,129,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,155,160,161,162,165,174,175,184,187,191,195,197,],[0,-1,-2,-4,-6,-7,-8,-10,-11,-12,-13,-14,-15,-16,-17,-73,-74,-20,-66,-3,-69,-72,-39,-40,-41,-42,-43,-44,-45,-46,-47,-67,-21,-38,-92,-5,-9,-79,-23,-48,-49,-50,-22,-70,-71,-78,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-68,-100,-94,-90,-91,-101,-37,-96,-93,-95,-75,-99,-97,-98,]),'END':([3,4,6,7,8,10,11,12,13,14,15,16,17,26,27,29,31,34,36,38,41,45,46,47,48,49,50,51,52,53,57,67,68,72,74,75,82,87,104,105,106,117,127,128,129,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,160,161,162,165,174,175,176,181,184,186,187,191,193,195,196,197,],[-2,-4,-6,-7,-8,-10,-11,-12,-13,-14,-15,-16,-17,-73,-74,-20,-66,-3,75,-69,-72,-39,-40,-41,-42,-43,-44,-45,-46,-47,-67,-21,-38,-92,-5,-9,-79,-23,-48,-49,-50,-22,-70,-71,-78,174,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-68,-100,175,-94,-90,-91,-101,-37,-96,-93,184,187,-95,191,-75,-99,195,-97,197,-98,]),'UNTIL':([3,4,6,7,8,10,11,12,13,14,15,16,17,26,27,29,31,34,38,41,45,46,47,48,49,50,51,52,53,57,60,67,68,72,74,75,82,87,104,105,106,117,127,128,129,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,155,160,161,162,165,174,175,184,187,191,195,197,],[-2,-4,-6,-7,-8,-10,-11,-12,-13,-14,-15,-16,-17,-73,-74,-20,-66,-3,-69,-72,-39,-40,-41,-42,-43,-44,-45,-46,-47,-67,108,-21,-38,-92,-5,-9,-79,-23,-48,-49,-50,-22,-70,-71,-78,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-68,-100,-94,-90,-91,-101,-37,-96,-93,-95,-75,-99,-97,-98,]),'ATRIB':([5,18,20,62,64,65,76,86,120,125,158,166,172,],[35,-27,-29,110,113,114,-28,135,-31,-36,-35,-30,183,]),'COLON':([6,19,31,38,41,52,57,77,82,116,121,127,128,129,152,169,],[-67,39,-66,-69,-72,39,-67,-67,-79,164,-68,-70,-71,-78,-68,-68,]),'LBRACE':([6,19,22,24,29,31,32,35,38,40,41,52,54,55,56,57,58,69,77,78,79,82,85,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,108,110,112,113,114,118,121,127,128,129,135,152,169,177,183,189,],[-67,42,42,42,42,-66,42,42,-69,42,-72,42,42,42,42,-67,42,42,-67,42,42,-79,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,-68,-70,-71,-78,42,-68,-68,42,42,42,]),'LCOLCH':([6,18,20,30,38,41,42,77,82,120,121,127,128,129,130,131,132,133,166,169,],[-33,-32,-29,69,-69,-72,85,-33,-79,-31,-34,-70,-71,-78,85,-88,-89,85,-30,-34,]),'DOT':([6,18,20,30,38,41,77,82,116,120,121,127,128,129,166,169,],[-33,-32,-29,70,-69,-72,-33,-79,163,-31,-34,-70,-71,-78,-30,-34,]),'COMMA':([18,20,26,27,31,38,41,45,46,47,48,49,50,51,52,53,57,62,65,68,72,82,83,84,86,104,105,106,120,123,125,127,128,129,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,157,158,162,166,172,173,185,187,188,],[37,-29,-73,-74,-66,-69,-72,-39,-40,-41,-42,-43,-44,-45,-46,-47,-67,111,111,118,-92,-79,131,131,-85,-48,-49,-50,-31,168,111,-70,-71,-78,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-68,177,-35,-101,-30,-84,-87,189,-75,-86,]),'NIL':([22,24,29,32,35,40,54,55,56,58,69,78,85,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,108,110,112,113,114,118,135,177,183,189,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'FALSE':([22,24,29,32,35,40,54,55,56,58,69,78,85,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,108,110,112,113,114,118,135,177,183,189,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'TRUE':([22,24,29,32,35,40,54,55,56,58,69,78,85,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,108,110,112,113,114,118,135,177,183,189,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'NUMBER':([22,24,29,32,35,40,54,55,56,58,69,78,85,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,108,110,112,113,114,118,135,177,183,189,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'STRING':([22,24,29,32,35,40,54,55,56,58,69,78,85,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,108,110,112,113,114,118,135,177,183,189,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'VARARGS':([22,24,29,32,35,40,54,55,56,58,69,73,78,85,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,108,110,112,113,114,118,135,168,177,183,189,],[50,50,50,50,50,50,50,50,50,50,50,124,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,182,50,50,50,]),'TAG':([22,24,29,32,35,40,54,55,56,58,69,78,85,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,108,110,112,113,114,118,135,177,183,189,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'MINUS':([22,24,26,27,29,31,32,35,38,40,41,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,61,68,69,71,72,78,82,85,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,110,112,113,114,118,119,126,127,128,129,134,135,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,157,161,162,173,177,183,185,187,188,189,192,],[55,55,-73,-74,55,-66,55,55,-69,55,-72,90,-39,-40,-41,-42,-43,-44,-45,-46,-47,55,55,55,-67,55,90,90,55,90,-92,55,-79,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,-48,-49,-50,90,55,55,55,55,55,55,90,90,-70,-71,-78,90,55,-51,-52,-53,-54,-55,-56,90,90,90,90,90,90,90,90,90,-68,90,90,90,-101,90,55,55,90,-75,90,55,90,]),'NOT':([22,24,29,32,35,40,54,55,56,58,69,78,85,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,108,110,112,113,114,118,135,177,183,189,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'PLUS':([26,27,31,38,41,44,45,46,47,48,49,50,51,52,53,57,61,68,71,72,82,104,105,106,107,119,126,127,128,129,134,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,157,161,162,173,185,187,188,192,],[-73,-74,-66,-69,-72,89,-39,-40,-41,-42,-43,-44,-45,-46,-47,-67,89,89,89,-92,-79,-48,-49,-50,89,89,89,-70,-71,-78,89,-51,-52,-53,-54,-55,-56,89,89,89,89,89,89,89,89,89,-68,89,89,89,-101,89,89,-75,89,89,]),'TIMES':([26,27,31,38,41,44,45,46,47,48,49,50,51,52,53,57,61,68,71,72,82,104,105,106,107,119,126,127,128,129,134,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,157,161,162,173,185,187,188,192,],[-73,-74,-66,-69,-72,91,-39,-40,-41,-42,-43,-44,-45,-46,-47,-67,91,91,91,-92,-79,-48,91,-50,91,91,91,-70,-71,-78,91,91,91,-53,-54,-55,-56,91,91,91,91,91,91,91,91,91,-68,91,91,91,-101,91,91,-75,91,91,]),'DIVIDE':([26,27,31,38,41,44,45,46,47,48,49,50,51,52,53,57,61,68,71,72,82,104,105,106,107,119,126,127,128,129,134,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,157,161,162,173,185,187,188,192,],[-73,-74,-66,-69,-72,92,-39,-40,-41,-42,-43,-44,-45,-46,-47,-67,92,92,92,-92,-79,-48,92,-50,92,92,92,-70,-71,-78,92,92,92,-53,-54,-55,-56,92,92,92,92,92,92,92,92,92,-68,92,92,92,-101,92,92,-75,92,92,]),'EXPO':([26,27,31,38,41,44,45,46,47,48,49,50,51,52,53,57,61,68,71,72,82,104,105,106,107,119,126,127,128,129,134,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,157,161,162,173,185,187,188,192,],[-73,-74,-66,-69,-72,93,-39,-40,-41,-42,-43,-44,-45,-46,-47,-67,93,93,93,-92,-79,93,93,93,93,93,93,-70,-71,-78,93,93,93,93,93,-55,93,93,93,93,93,93,93,93,93,93,-68,93,93,93,-101,93,93,-75,93,93,]),'PERCENTUAL':([26,27,31,38,41,44,45,46,47,48,49,50,51,52,53,57,61,68,71,72,82,104,105,106,107,119,126,127,128,129,134,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,157,161,162,173,185,187,188,192,],[-73,-74,-66,-69,-72,94,-39,-40,-41,-42,-43,-44,-45,-46,-47,-67,94,94,94,-92,-79,-48,94,-50,94,94,94,-70,-71,-78,94,94,94,-53,-54,-55,-56,94,94,94,94,94,94,94,94,94,-68,94,94,94,-101,94,94,-75,94,94,]),'CONCAT':([26,27,31,38,41,44,45,46,47,48,49,50,51,52,53,57,61,68,71,72,82,104,105,106,107,119,126,127,128,129,134,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,157,161,162,173,185,187,188,192,],[-73,-74,-66,-69,-72,95,-39,-40,-41,-42,-43,-44,-45,-46,-47,-67,95,95,95,-92,-79,-48,-49,-50,95,95,95,-70,-71,-78,95,-51,-52,-53,-54,-55,-56,-57,95,95,95,95,95,95,95,95,-68,95,95,95,-101,95,95,-75,95,95,]),'LT':([26,27,31,38,41,44,45,46,47,48,49,50,51,52,53,57,61,68,71,72,82,104,105,106,107,119,126,127,128,129,134,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,157,161,162,173,185,187,188,192,],[-73,-74,-66,-69,-72,96,-39,-40,-41,-42,-43,-44,-45,-46,-47,-67,96,96,96,-92,-79,-48,-49,-50,96,96,96,-70,-71,-78,96,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,96,96,-68,96,96,96,-101,96,96,-75,96,96,]),'LTEQUALS':([26,27,31,38,41,44,45,46,47,48,49,50,51,52,53,57,61,68,71,72,82,104,105,106,107,119,126,127,128,129,134,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,157,161,162,173,185,187,188,192,],[-73,-74,-66,-69,-72,97,-39,-40,-41,-42,-43,-44,-45,-46,-47,-67,97,97,97,-92,-79,-48,-49,-50,97,97,97,-70,-71,-78,97,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,97,97,-68,97,97,97,-101,97,97,-75,97,97,]),'GT':([26,27,31,38,41,44,45,46,47,48,49,50,51,52,53,57,61,68,71,72,82,104,105,106,107,119,126,127,128,129,134,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,157,161,162,173,185,187,188,192,],[-73,-74,-66,-69,-72,98,-39,-40,-41,-42,-43,-44,-45,-46,-47,-67,98,98,98,-92,-79,-48,-49,-50,98,98,98,-70,-71,-78,98,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,98,98,-68,98,98,98,-101,98,98,-75,98,98,]),'GTEQUALS':([26,27,31,38,41,44,45,46,47,48,49,50,51,52,53,57,61,68,71,72,82,104,105,106,107,119,126,127,128,129,134,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,157,161,162,173,185,187,188,192,],[-73,-74,-66,-69,-72,99,-39,-40,-41,-42,-43,-44,-45,-46,-47,-67,99,99,99,-92,-79,-48,-49,-50,99,99,99,-70,-71,-78,99,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,99,99,-68,99,99,99,-101,99,99,-75,99,99,]),'EQUALS':([26,27,31,38,41,44,45,46,47,48,49,50,51,52,53,57,61,68,71,72,82,104,105,106,107,119,126,127,128,129,134,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,157,161,162,173,185,187,188,192,],[-73,-74,-66,-69,-72,100,-39,-40,-41,-42,-43,-44,-45,-46,-47,-67,100,100,100,-92,-79,-48,-49,-50,100,100,100,-70,-71,-78,100,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,100,100,-68,100,100,100,-101,100,100,-75,100,100,]),'DIF':([26,27,31,38,41,44,45,46,47,48,49,50,51,52,53,57,61,68,71,72,82,104,105,106,107,119,126,127,128,129,134,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,157,161,162,173,185,187,188,192,],[-73,-74,-66,-69,-72,101,-39,-40,-41,-42,-43,-44,-45,-46,-47,-67,101,101,101,-92,-79,-48,-49,-50,101,101,101,-70,-71,-78,101,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,101,101,-68,101,101,101,-101,101,101,-75,101,101,]),'AND':([26,27,31,38,41,44,45,46,47,48,49,50,51,52,53,57,61,68,71,72,82,104,105,106,107,119,126,127,128,129,134,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,157,161,162,173,185,187,188,192,],[-73,-74,-66,-69,-72,102,-39,-40,-41,-42,-43,-44,-45,-46,-47,-67,102,102,102,-92,-79,-48,-49,-50,102,102,102,-70,-71,-78,102,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,102,-68,102,102,102,-101,102,102,-75,102,102,]),'OR':([26,27,31,38,41,44,45,46,47,48,49,50,51,52,53,57,61,68,71,72,82,104,105,106,107,119,126,127,128,129,134,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,157,161,162,173,185,187,188,192,],[-73,-74,-66,-69,-72,103,-39,-40,-41,-42,-43,-44,-45,-46,-47,-67,103,103,103,-92,-79,-48,-49,-50,103,103,103,-70,-71,-78,103,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-68,103,103,103,-101,103,103,-75,103,103,]),'THEN':([26,27,31,38,41,45,46,47,48,49,50,51,52,53,57,61,72,82,104,105,106,127,128,129,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,162,187,],[-73,-74,-66,-69,-72,-39,-40,-41,-42,-43,-44,-45,-46,-47,-67,109,-92,-79,-48,-49,-50,-70,-71,-78,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-68,-101,-75,]),'RPAREN':([26,27,31,38,41,45,46,47,48,49,50,51,52,53,57,68,71,72,80,82,104,105,106,107,122,124,126,127,128,129,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,162,165,182,187,],[-73,-74,-66,-69,-72,-39,-40,-41,-42,-43,-44,-45,-46,-47,-67,-38,121,-92,128,-79,-48,-49,-50,152,167,-77,169,-70,-71,-78,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-68,-101,-37,-76,-75,]),'RCOLCH':([26,27,31,38,41,45,46,47,48,49,50,51,52,53,57,72,82,104,105,106,119,127,128,129,134,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,162,187,],[-73,-74,-66,-69,-72,-39,-40,-41,-42,-43,-44,-45,-46,-47,-67,-92,-79,-48,-49,-50,166,-70,-71,-78,172,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-68,-101,-75,]),'RBRACE':([26,27,31,38,41,42,45,46,47,48,49,50,51,52,53,57,72,81,82,83,84,86,104,105,106,127,128,129,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,162,170,171,172,173,187,188,],[-73,-74,-66,-69,-72,82,-39,-40,-41,-42,-43,-44,-45,-46,-47,-67,-92,129,-79,-80,-82,-85,-48,-49,-50,-70,-71,-78,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-68,-101,-81,-83,-84,-87,-75,-86,]),'IN':([62,63,125,158,],[-36,112,-36,-35,]),'ELSE':([109,],[156,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'block':([0,3,9,23,88,109,156,167,178,190,194,],[2,34,36,60,136,154,176,181,186,193,196,]),'command':([0,3,9,23,88,109,156,167,178,190,194,],[3,3,3,3,3,3,3,3,3,3,3,]),'list_vars':([0,3,9,23,37,88,109,156,167,178,190,194,],[5,5,5,5,76,5,5,5,5,5,5,5,]),'call_function':([0,3,9,22,23,24,29,32,35,37,40,54,55,56,58,69,78,85,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,108,109,110,112,113,114,118,135,156,167,177,178,183,189,190,194,],[6,6,6,57,6,57,57,57,57,77,57,57,57,57,57,57,57,57,6,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,6,57,57,57,57,57,57,6,6,57,6,57,57,6,6,]),'rotulo':([0,3,9,23,88,109,156,167,178,190,194,],[7,7,7,7,7,7,7,7,7,7,7,]),'struct_while':([0,3,9,23,88,109,156,167,178,190,194,],[10,10,10,10,10,10,10,10,10,10,10,]),'struct_repeat':([0,3,9,23,88,109,156,167,178,190,194,],[11,11,11,11,11,11,11,11,11,11,11,]),'if':([0,3,9,23,88,109,156,167,178,190,194,],[12,12,12,12,12,12,12,12,12,12,12,]),'struct_for':([0,3,9,23,88,109,156,167,178,190,194,],[13,13,13,13,13,13,13,13,13,13,13,]),'struct_for_in':([0,3,9,23,88,109,156,167,178,190,194,],[14,14,14,14,14,14,14,14,14,14,14,]),'def_function':([0,3,9,22,23,24,29,32,35,40,54,55,56,58,69,78,85,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,108,109,110,112,113,114,118,135,156,167,177,178,183,189,190,194,],[15,15,15,51,15,51,51,51,51,51,51,51,51,51,51,51,51,15,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,15,51,51,51,51,51,51,15,15,51,15,51,51,15,15,]),'local_var':([0,3,9,23,88,109,156,167,178,190,194,],[16,16,16,16,16,16,16,16,16,16,16,]),'command_ret':([0,3,9,23,88,109,156,167,178,190,194,],[17,17,17,17,17,17,17,17,17,17,17,]),'var':([0,3,9,23,37,88,109,156,167,178,190,194,],[18,18,18,18,18,18,18,18,18,18,18,18,]),'exp_prefix':([0,3,9,22,23,24,29,32,35,37,40,54,55,56,58,69,78,85,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,108,109,110,112,113,114,118,135,156,167,177,178,183,189,190,194,],[19,19,19,52,19,52,52,52,52,19,52,52,52,52,52,52,52,52,19,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,19,52,52,52,52,52,52,19,19,52,19,52,52,19,19,]),'function':([0,3,9,22,23,24,29,32,35,40,54,55,56,58,69,78,85,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,108,109,110,112,113,114,118,135,156,167,177,178,183,189,190,194,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'local_function':([0,3,9,22,23,24,29,32,35,40,54,55,56,58,69,78,85,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,108,109,110,112,113,114,118,135,156,167,177,178,183,189,190,194,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'prefix_exp':([0,3,9,23,37,88,109,156,167,178,190,194,],[30,30,30,30,30,30,30,30,30,30,30,30,]),'args':([19,52,79,],[38,38,127,]),'construct_table':([19,22,24,29,32,35,40,52,54,55,56,58,69,78,79,85,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,108,110,112,113,114,118,135,177,183,189,],[41,53,53,53,53,53,53,41,53,53,53,53,53,53,41,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'exp':([22,24,29,32,35,40,54,55,56,58,69,78,85,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,108,110,112,113,114,118,135,177,183,189,],[44,61,68,71,68,68,104,105,106,107,119,126,134,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,153,157,68,68,161,68,173,185,188,192,]),'list_names':([25,28,73,111,],[63,64,123,158,]),'list_exps':([29,35,40,112,113,118,],[67,74,80,159,160,165,]),'body_function':([33,115,],[72,162,]),'list_fields':([42,130,133,],[81,170,171,]),'field':([42,130,133,],[83,83,83,]),'field_empty':([42,130,133,],[84,84,84,]),'name_function':([66,],[115,]),'list_pars':([73,],[122,]),'separator_fields':([83,84,],[130,133,]),'else':([109,],[155,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> block','program',1,'p_program','ExpressionLanguageParser.py',13),
  ('block -> command','block',1,'p_block','ExpressionLanguageParser.py',18),
  ('block -> command block','block',2,'p_block','ExpressionLanguageParser.py',19),
  ('command -> SEMICOLON','command',1,'p_command','ExpressionLanguageParser.py',25),
  ('command -> list_vars ATRIB list_exps','command',3,'p_command','ExpressionLanguageParser.py',26),
  ('command -> call_function','command',1,'p_command','ExpressionLanguageParser.py',27),
  ('command -> rotulo','command',1,'p_command','ExpressionLanguageParser.py',28),
  ('command -> BREAK','command',1,'p_command','ExpressionLanguageParser.py',29),
  ('command -> DO block END','command',3,'p_command','ExpressionLanguageParser.py',30),
  ('command -> struct_while','command',1,'p_command','ExpressionLanguageParser.py',31),
  ('command -> struct_repeat','command',1,'p_command','ExpressionLanguageParser.py',32),
  ('command -> if','command',1,'p_command','ExpressionLanguageParser.py',33),
  ('command -> struct_for','command',1,'p_command','ExpressionLanguageParser.py',34),
  ('command -> struct_for_in','command',1,'p_command','ExpressionLanguageParser.py',35),
  ('command -> def_function','command',1,'p_command','ExpressionLanguageParser.py',36),
  ('command -> local_var','command',1,'p_command','ExpressionLanguageParser.py',37),
  ('command -> command_ret','command',1,'p_command','ExpressionLanguageParser.py',38),
  ('list_command -> command list_command','list_command',2,'p_list_command','ExpressionLanguageParser.py',42),
  ('list_command -> command','list_command',1,'p_list_command','ExpressionLanguageParser.py',43),
  ('command_ret -> RETURN','command_ret',1,'p_command_ret','ExpressionLanguageParser.py',48),
  ('command_ret -> RETURN list_exps','command_ret',2,'p_command_ret','ExpressionLanguageParser.py',49),
  ('command_ret -> RETURN list_exps SEMICOLON','command_ret',3,'p_command_ret','ExpressionLanguageParser.py',50),
  ('rotulo -> DUALCOLON NAME DUALCOLON','rotulo',3,'p_rotulo','ExpressionLanguageParser.py',55),
  ('name_function -> NAME','name_function',1,'p_name_function','ExpressionLanguageParser.py',60),
  ('name_function -> NAME DOT NAME','name_function',3,'p_name_function','ExpressionLanguageParser.py',61),
  ('name_function -> NAME COLON NAME','name_function',3,'p_name_function','ExpressionLanguageParser.py',62),
  ('list_vars -> var','list_vars',1,'p_list_vars','ExpressionLanguageParser.py',67),
  ('list_vars -> var COMMA list_vars','list_vars',3,'p_list_vars','ExpressionLanguageParser.py',68),
  ('var -> NAME','var',1,'p_var','ExpressionLanguageParser.py',73),
  ('var -> prefix_exp LCOLCH exp RCOLCH','var',4,'p_var','ExpressionLanguageParser.py',74),
  ('var -> prefix_exp DOT NAME','var',3,'p_var','ExpressionLanguageParser.py',75),
  ('prefix_exp -> var','prefix_exp',1,'p_prefix_exp','ExpressionLanguageParser.py',79),
  ('prefix_exp -> call_function','prefix_exp',1,'p_prefix_exp','ExpressionLanguageParser.py',80),
  ('prefix_exp -> LPAREN exp RPAREN','prefix_exp',3,'p_prefix_exp','ExpressionLanguageParser.py',81),
  ('list_names -> NAME COMMA list_names','list_names',3,'p_list_names','ExpressionLanguageParser.py',86),
  ('list_names -> NAME','list_names',1,'p_list_names','ExpressionLanguageParser.py',87),
  ('list_exps -> exp COMMA list_exps','list_exps',3,'p_list_exps','ExpressionLanguageParser.py',92),
  ('list_exps -> exp','list_exps',1,'p_list_exps','ExpressionLanguageParser.py',93),
  ('exp -> NIL','exp',1,'p_exp','ExpressionLanguageParser.py',98),
  ('exp -> FALSE','exp',1,'p_exp','ExpressionLanguageParser.py',99),
  ('exp -> TRUE','exp',1,'p_exp','ExpressionLanguageParser.py',100),
  ('exp -> NUMBER','exp',1,'p_exp','ExpressionLanguageParser.py',101),
  ('exp -> STRING','exp',1,'p_exp','ExpressionLanguageParser.py',102),
  ('exp -> VARARGS','exp',1,'p_exp','ExpressionLanguageParser.py',103),
  ('exp -> def_function','exp',1,'p_exp','ExpressionLanguageParser.py',104),
  ('exp -> exp_prefix','exp',1,'p_exp','ExpressionLanguageParser.py',105),
  ('exp -> construct_table','exp',1,'p_exp','ExpressionLanguageParser.py',106),
  ('exp -> TAG exp','exp',2,'p_exp','ExpressionLanguageParser.py',107),
  ('exp -> MINUS exp','exp',2,'p_exp','ExpressionLanguageParser.py',108),
  ('exp -> NOT exp','exp',2,'p_exp','ExpressionLanguageParser.py',109),
  ('exp -> exp PLUS exp','exp',3,'p_exp','ExpressionLanguageParser.py',110),
  ('exp -> exp MINUS exp','exp',3,'p_exp','ExpressionLanguageParser.py',111),
  ('exp -> exp TIMES exp','exp',3,'p_exp','ExpressionLanguageParser.py',112),
  ('exp -> exp DIVIDE exp','exp',3,'p_exp','ExpressionLanguageParser.py',113),
  ('exp -> exp EXPO exp','exp',3,'p_exp','ExpressionLanguageParser.py',114),
  ('exp -> exp PERCENTUAL exp','exp',3,'p_exp','ExpressionLanguageParser.py',115),
  ('exp -> exp CONCAT exp','exp',3,'p_exp','ExpressionLanguageParser.py',116),
  ('exp -> exp LT exp','exp',3,'p_exp','ExpressionLanguageParser.py',117),
  ('exp -> exp LTEQUALS exp','exp',3,'p_exp','ExpressionLanguageParser.py',118),
  ('exp -> exp GT exp','exp',3,'p_exp','ExpressionLanguageParser.py',119),
  ('exp -> exp GTEQUALS exp','exp',3,'p_exp','ExpressionLanguageParser.py',120),
  ('exp -> exp EQUALS exp','exp',3,'p_exp','ExpressionLanguageParser.py',121),
  ('exp -> exp DIF exp','exp',3,'p_exp','ExpressionLanguageParser.py',122),
  ('exp -> exp AND exp','exp',3,'p_exp','ExpressionLanguageParser.py',123),
  ('exp -> exp OR exp','exp',3,'p_exp','ExpressionLanguageParser.py',124),
  ('exp_prefix -> VAR','exp_prefix',1,'p_exp_prefix','ExpressionLanguageParser.py',129),
  ('exp_prefix -> call_function','exp_prefix',1,'p_exp_prefix','ExpressionLanguageParser.py',130),
  ('exp_prefix -> LPAREN exp RPAREN','exp_prefix',3,'p_exp_prefix','ExpressionLanguageParser.py',131),
  ('call_function -> exp_prefix args','call_function',2,'p_call_function','ExpressionLanguageParser.py',136),
  ('call_function -> exp_prefix COLON NAME args','call_function',4,'p_call_function','ExpressionLanguageParser.py',137),
  ('args -> LPAREN list_exps RPAREN','args',3,'p_args','ExpressionLanguageParser.py',142),
  ('args -> construct_table','args',1,'p_args','ExpressionLanguageParser.py',143),
  ('def_function -> function','def_function',1,'p_def_function','ExpressionLanguageParser.py',148),
  ('def_function -> local_function','def_function',1,'p_def_function','ExpressionLanguageParser.py',149),
  ('body_function -> LPAREN list_pars RPAREN block END','body_function',5,'p_body_function','ExpressionLanguageParser.py',153),
  ('list_pars -> list_names COMMA VARARGS','list_pars',3,'p_list_pars','ExpressionLanguageParser.py',158),
  ('list_pars -> VARARGS','list_pars',1,'p_list_pars','ExpressionLanguageParser.py',159),
  ('construct_table -> LBRACE list_fields RBRACE','construct_table',3,'p_construct_table','ExpressionLanguageParser.py',164),
  ('construct_table -> LBRACE RBRACE','construct_table',2,'p_construct_table','ExpressionLanguageParser.py',165),
  ('list_fields -> field','list_fields',1,'p_list_fields','ExpressionLanguageParser.py',170),
  ('list_fields -> field separator_fields list_fields','list_fields',3,'p_list_fields','ExpressionLanguageParser.py',171),
  ('list_fields -> field_empty','list_fields',1,'p_list_fields','ExpressionLanguageParser.py',172),
  ('list_fields -> field_empty separator_fields list_fields','list_fields',3,'p_list_fields','ExpressionLanguageParser.py',173),
  ('field_empty -> LCOLCH exp RCOLCH','field_empty',3,'p_field_empty','ExpressionLanguageParser.py',178),
  ('field_empty -> NAME','field_empty',1,'p_field_empty','ExpressionLanguageParser.py',179),
  ('field -> LCOLCH exp RCOLCH ATRIB exp','field',5,'p_field','ExpressionLanguageParser.py',184),
  ('field -> NAME ATRIB exp','field',3,'p_field','ExpressionLanguageParser.py',185),
  ('separator_fields -> COMMA','separator_fields',1,'p_separator_fields','ExpressionLanguageParser.py',190),
  ('separator_fields -> SEMICOLON','separator_fields',1,'p_separator_fields','ExpressionLanguageParser.py',191),
  ('local_var -> LOCAL list_names ATRIB list_exps','local_var',4,'p_local_var','ExpressionLanguageParser.py',196),
  ('local_var -> LOCAL NAME ATRIB exp','local_var',4,'p_local_var','ExpressionLanguageParser.py',197),
  ('function -> FUNCTION body_function','function',2,'p_function','ExpressionLanguageParser.py',208),
  ('if -> IF exp THEN block END','if',5,'p_if','ExpressionLanguageParser.py',213),
  ('if -> IF exp THEN else','if',4,'p_if','ExpressionLanguageParser.py',214),
  ('else -> ELSE block END','else',3,'p_else','ExpressionLanguageParser.py',229),
  ('struct_while -> WHILE exp DO block END','struct_while',5,'p_struct_while','ExpressionLanguageParser.py',234),
  ('struct_for -> FOR NAME ATRIB exp COMMA exp DO block END','struct_for',9,'p_struct_for','ExpressionLanguageParser.py',239),
  ('struct_for -> FOR NAME ATRIB exp COMMA exp COMMA exp DO block END','struct_for',11,'p_struct_for','ExpressionLanguageParser.py',240),
  ('struct_for_in -> FOR list_names IN list_exps DO block END','struct_for_in',7,'p_struct_for_in','ExpressionLanguageParser.py',244),
  ('struct_repeat -> REPEAT block UNTIL exp','struct_repeat',4,'p_struct_repeat','ExpressionLanguageParser.py',249),
  ('local_function -> LOCAL FUNCTION name_function body_function','local_function',4,'p_local_function','ExpressionLanguageParser.py',254),
]
